@use "sass:math";
@import '../../utils/scss/';

$checkbox-input-sizes: (
  padding-tiny: 4px,
  font-size-tiny: 10px,

  padding-small: 8px,
  font-size-small: 18px,

  padding-medium: 12px,
  font-size-medium: 26px,

  padding-normal: 12px,
  font-size-normal: 26px,

  padding-large: 16px,
  font-size-large: 34px,

  padding-xlarge: 20px,
  font-size-xlarge: 42px,

  padding-massive: 24px,
  font-size-massive: 50px
);

$form-input-sizes: (
  padding-tiny: 4px 8px,
  padding-small: 5px 10px,
  padding-medium: 6px 8px,
  padding-normal: 6px 8px,
  padding-large: 8px 16px,
  padding-xlarge: 8px 16px,
  padding-massive: 8px 16px,
);

.#{$global-prefix}form-element {
	width: 100%;

  &--static {
    label[for] {
      cursor: auto;
    }
  }

	select,
	input[type=text],
	input[type=email],
	input[type=password],
	input[type=number],
	textarea {
		width: 100%;
	}

	select,
	input[type=text],
	input[type=email],
	input[type=number],
	textarea {
    font-size: 18px;
    color: #000000;
    border: solid $global-border-width map-get($global-site-colors, formelement-border);
    border-radius: 6px;
    padding: 6px 6px;
    margin-right: 0px;
    text-transform: uppercase;
    font-family: $global-font;

    &:focus,
    &:focus-visible,
    &:active {
      outline: $global-border-width solid map-get($global-site-colors, formelement-outline);
      outline-offset: $global-border-width * -1;
    }
  }

	textarea {
    height: 123px;
    resize: none;
  }

  + .#{$global-prefix}boolean-visibility {
    position: absolute;
    font-size: x-small;
    color: map-get($global-site-colors, error);
    margin-top: 0;

    & + .#{$global-prefix}form-element {
      margin-top: $global-margin;
    }
  }

  & + .#{$global-prefix}form-element {
    margin-top: $global-margin;
  }

  &--error {
    > label {
      &:after {
        content: " *";
        color: map-get($global-site-colors, error);
        margin-left: math.div($global-margin, 2);
      }
    }

    .error {
      font-size: small;
    }

    select,
    input[type=text],
    input[type=email],
    input[type=password],
    input[type=number],
    textarea {
      border-color: map-get($global-site-colors, error);
    }
  }

  input[type=text],
  input[type=email] {
    text-transform: none;
  }

	input[type=radio],
	input[type=checkbox] {
    appearance: none;
    background-color: #ffffff;
    border: $global-border-width solid map-get($global-site-colors, formelement-border);
    padding: 9px;
    border-radius: $global-radius;
    display: inline-block;
    position: relative;
    &:hover {
      cursor: pointer;
    }

    &:checked {
      border: $global-border-width solid map-get($global-site-colors, formelement-outline);
      color: #99a1a7;
      &:after {
        content: '\2714';
        position: absolute;
        font-size: 18px;
        top: 0;
        left: 0;
        color: #006613;
        font-weight: bold;
      }
    }
  }

	&--checkbox,
  &--radio {
    display: flex;
    flex-flow: row nowrap;
    align-items: center;
    justify-content: flex-start;
    width: 100%;
    margin-bottom: $global-border-width;
  }

  &--disabled input,
  &--disabled button,
  &--disabled select,
  &--disabled textarea,
  input[disabled],
  button[disabled],
  textarea[disabled],
  select[disabled] {
    cursor: not-allowed !important;
    background-color: map-get($global-site-colors, disabled) !important;
  }
  
  &--disabled {
    > label {
      font-weight: bold;
      color: map-get($global-site-colors, disabled) !important;
    }
  }

  @each $size in $global-sizes {
    &.#{"" + $size} {
      > label {
        font-size: map-get($global-input-sizes, #{'font-' + $size});
        line-height: map-get($global-input-sizes, #{'line-height-' + $size});
      }

      input[type=radio],
      input[type=checkbox] {
        padding: map-get($checkbox-input-sizes, #{'padding-' + $size});

        &:after {
          font-size: map-get($checkbox-input-sizes, #{'font-size-' + $size});
        }
      }

      select,
      input[type=text],
      input[type=email],
      input[type=password],
      input[type=number],
      textarea {
        font-size: map-get($global-input-sizes, #{'font-' + $size});
        line-height: map-get($global-input-sizes, #{'line-height-' + $size});
        padding: map-get($form-input-sizes, #{'padding-' + $size});

        @include desktopbreakpoint() {
          font-size: map-get($global-input-sizes, #{'font-' + $size + '--desktop'});
          line-height: map-get($global-input-sizes, #{'line-height-' + $size + '--desktop'});
        }
      }
    }
  }
}

.#{$global-prefix}form-element label,
.#{$global-prefix}form-element--label {
  width: 100%;
  text-align: left;
  margin-bottom: 0;
  font-size: 16px;
  color: map-get($global-site-colors, formelement-label);
  margin-right: $global-border-width;

  & + pre,
  & + p {
    padding: $global-border-width;
    margin: 0;
  }

  &[for] {
    cursor: pointer;
  }
}

.#{$global-prefix}fieldsets,
.#{$global-prefix}form-fieldsets {
	margin-bottom: $global-margin;
  @include tabletbreakpoint() {
    display: flex;
    justify-content: space-between;
    flex-wrap: wrap;
    flex-direction: row;

    .#{$global-prefix}form-fieldset {
      flex-basis: 49%;

      & + .#{$global-prefix}form-fieldset {
        margin-top: 0;
      }

      &:nth-child(3),
      &:nth-child(5),
      &:nth-child(7) {
        margin-top: $global-margin;
      }
    }
  }
}

.#{$global-prefix}form-fieldset {
	margin: 0;
	padding: 0;
	border: 0 none;

  + .#{$global-prefix}form-fieldset {
    margin-top: $global-margin;
  }
}

.#{$global-prefix}form .actions {
	display: flex;
	justify-content: space-around;
  margin-top: $global-margin;
}

.#{$global-prefix}form-element--legend {
	padding: 0;
  margin-bottom: $global-margin;
}
